{
    "contents" : "#R code to make the figures in Kirk's slides from R bootcamp:\n#Updated for 2015.\n\n#make a basic histogram in R:\n\n#first, draw 1000 random values from a standard normal distribution (SD=1):\ns1<-rnorm(1000,mean=0,sd=1)\n\n#now do 1000 drawn from a normal distribution with SD=3.\ns3<-rnorm(1000,mean=0,sd=3)\n\n#plot histograms of both on same panel and save to a file:\npdf(file=\"~/Dropbox/Kirk_stuff/KEL_bootcamp/Normal_hist.pdf\", width=4,height=7); \n#open the file\n\npar(mfrow=c(2,1), mar=c(4, 4, 3, 2)) #sets plotting area and margins\n\nhist(s1,col=2,xlab=\"Value\",main=\"Sigma=1\") #make first hist\n\nhist(s3,col=4,xlab=\"Value\",main=\"Sigma=3\") #make second hist\n\ndev.off() #shuts off current output device\n\n\n#Now for the fancy one:\n\n\n#plot histograms of both on same panel and save to a file:\npdf(file=\"~/Dropbox/Kirk_stuff/KEL_bootcamp/Normal_hist.fancy.pdf\", width=4,height=7); \n#open the file\n\npar(mfrow=c(2,1), mar=c(4, 4, 3, 2)) #sets plotting area and margins\n\nhist(s1,col=2,xlab=\"Value\",main=expression(paste(sigma,\"=1\"))) #make first hist\n\nhist(s3,col=4,xlab=\"Value\",main=expression(paste(sigma,\"=3\")))  #make second hist\n\ndev.off() #shuts off current output device\n\n\n\n\n\n\n#make smooth density plot:\n\npdf(file=\"~//Dropbox/Kirk_stuff/KEL_bootcamp/Normal_density.pdf\", width=6,height=6); #open the file\n\npar(mfrow=c(1,1), mar=c(4, 4, 3, 2)) #sets plotting area and margins\n\nplot(density(s1),col=2,lwd=4,xlab=\"Value\",xlim=c(-15,15),main=\"Normal distribution\")\n\nlines(density(s3),col=4,lwd=4) #add the SD=3 values\n\nlegend(-15,0.4,c(\"sigma=1\",\"sigma=3\"),lwd=4,col=c(2,4),cex=1.5) #put a legend on\n\n#we can highlight the upper 10% of each distribution with a vertical line:\nabline(v=quantile(s1,0.9),lty=2,lwd=3,col=2) #puts a vertical line onto the plot for s1\nabline(v=quantile(s3,0.9),lty=2,lwd=3,col=4) #puts a vertical line onto the plot for s3\ndev.off()\n\n#quantile take a vector of stuff, and returns the value q such that p% of your distribution is less than q.\n\n#for example, find the 75th percentile of the standard normal distribution:\nquantile(s1,0.75)\n\n#quantile with just a vector gives some interesting stuff:\nquantile(s1)\n\n\n#boxplot:\npdf(file=\"/Users/kirk/Dropbox/Kirk_stuff/KEL_bootcamp/Normal_boxplot.pdf\", width=6,height=6); #open the file\n\npar(mfrow=c(1,1), mar=c(4, 4, 3, 2)) #sets plotting area and margins\n\nboxplot(cbind(s1,s3),names=c(\"Sigma=1\",\"Sigma=3\"),main=\"Draws from a normal distribution\",col=c(2,4))\n\ndev.off()\n\n\n######################################\n\n#Let's make a histogram of these values, but putting boht on the same axes.\n#We can do that...\n#But, we need to have the same bin widths for both datasets:\n\nbins<-seq(-10,10,by=1)\n\nhist(s1,breaks=bins)$breaks\n\nhist(s3,breaks=bins)$breaks\n\n#This looks good\n\ncounts_s1<-hist(s1,breaks=bins)$counts\ncounts_s3<-hist(s3,breaks=bins)$counts\n\n#Note, If right = TRUE (default), the histogram cells are intervals of the form (a, b], i.e., they include their right-hand endpoint, but not their left one, with the exception of the first cell when include.lowest is TRUE.\n\n#now make the plot:\npdf(file=\"~/Dropbox/Kirk_stuff/KEL_bootcamp/normal_barplot.pdf\", width=6,height=6); #open the file\n\npar(mfrow=c(1,1), mar=c(4, 4, 3, 2)) #sets plotting area and margins\n\nbarplot(rbind(counts_s1,counts_s3),col=c(2,4),beside=T,names.arg=seq(-10,9.5,by=1),xlab=\"Value\",ylab=\"Count\")\n\nlegend(6,350,c(expression(paste(sigma,\"=3\")),expression(paste(sigma,\"=6\"))),col=c(2,4),lwd=4)\n\ndev.off()\n\n\n#Simple scatterplot:\npdf(file=\"/Users/kirk/Dropbox/Kirk_stuff/KEL_bootcamp/scatter_small.pdf\", width=10,height=10); #open the file\n\npar(mfrow=c(1,1), mar=c(4, 4, 3, 2)) #sets plotting area and margins\n\nx<-rnorm(100)\ny<-x+rnorm(100,sd=0.2)\n\nplot(x,y,pch=19)\n\ndev.off()\n\n\n#now, try again, make the labels bigger:\n#Simple scatterplot:\npdf(file=\"/Users/kirk/Dropbox/Kirk_stuff/KEL_bootcamp/scatter_large.pdf\", width=10,height=10); #open the file\n\npar(mfrow=c(1,1), mar=c(5, 5, 3, 2)) #sets plotting area and margins\n\nx<-rnorm(100)\ny<-x+rnorm(100,sd=0.2)\n\nplot(x,y,pch=19,cex.lab=2,cex.axis=2)\n\ndev.off()\n\n\n\n\n\n\n######################################\n#In 2014, we'll skip the binomial stuff. Make the hist for the normal dist:\n\n\n#Now, let's do something different:\n\n#we can simulate from a binomial distribution pretty easily too:\np_0.1<-rbinom(1000,10,0.1) #draw 1000 values from a binomial distribution with n=10 and p=0.1\n\np_0.6<-rbinom(1000,10,0.6) #draw 1000 values from a binomial distribution with n=10 and p=0.6\n\nmean(p_0.1)\n\nmean(p_0.6)\n\n#can easily figure out the % of values <some threshold:\nmean(p_0.1<3)\n\nmean(p_0.6<3)\n\n\n#Let's plot the distribution of these values:\n#need to set the same bins widths for the histogram:\nbins<-seq(0,11,by=1)\n\nhist(p_0.1,breaks=breaks)$breaks\n\nhist(p_0.6,breaks=breaks)$breaks\n\n#this looks good!\n\ncounts_0.1<-hist(p_0.1,breaks=breaks)$counts\ncounts_0.6<-hist(p_0.6,breaks=breaks)$counts\n\n#now make the plot:\npdf(file=\"/Users/kirk/Dropbox/Kirk_stuff/KEL_bootcamp/binomial_barplot.pdf\", width=6,height=6); #open the file\n\npar(mfrow=c(1,1), mar=c(4, 4, 3, 2)) #sets plotting area and margins\n\nbarplot(rbind(counts_0.1,counts_0.6),col=c(3,6),beside=T,names.arg=seq(0,10,by=1),xlab=\"Number of successes\",ylab=\"Count\")\n\nlegend(6,600,c(\"p=0.1\",\"p=0.6\"),col=c(3,6),lwd=4)\n\ndev.off()\n\n\n########\n\n\n\n",
    "created" : 1442507478143.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2864358004",
    "id" : "38C1F9E7",
    "lastKnownWriteTime" : 1442436388,
    "path" : "~/GitHub/EEB201-coursework/R_plot_slides.R",
    "project_path" : "R_plot_slides.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}